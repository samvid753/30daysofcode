load('matlab.mat')
load('matlab.mat')
who

Your variables are:

a    ans  b    o    t    x    y    

a=7; b=cos(a),c=cos(a)

b =

   0.753902254343305


c =

   0.753902254343305

a=7 b=6 c=9
 a=7 b=6 c=9
     â†‘
{Invalid expression. Check for missing multiplication operator,
missing or unbalanced delimiters, or other syntax error. To
construct matrices, use brackets instead of parentheses.
} 
a=6,b=7,c=cos(a)

a =

     6


b =

     7


c =

   0.960170286650366

samvid
{Unrecognized function or variable 'samvid'.
} 
samvid
{Unrecognized function or variable 'samvid'.
} 
sa
{Unrecognized function or variable 'sa'.
} 
who

Your variables are:

a    ans  b    c    o    t    x    y    

ans

ans =

   0.421761282626275   0.959492426392903   0.849129305868777
   0.915735525189067   0.655740699156587   0.933993247757551
   0.792207329559554   0.035711678574190   0.678735154857773

b

b =

     7

c

c =

   0.960170286650366

o

o =

     9

help who
 <strong>who</strong>    List current variables.
    <strong>who</strong> lists the variables in the current workspace.
 
    In a nested function, variables are grouped into those in the nested
    function and those in each of the containing functions.  <strong>who</strong> displays
    only the variables names, not the function to which each variable
    belongs.  For this information, use WHOS.
 
    WHOS lists more information about each variable.
    <strong>who</strong> GLOBAL and WHOS GLOBAL list the variables in the global workspace.
    <strong>who</strong> -FILE FILENAME lists the variables in the specified .MAT file.
 
    <strong>who</strong> ... VAR1 VAR2 restricts the display to the variables specified. The
    wildcard character '*' can be used to display variables that match a
    pattern.  For instance, <strong>who</strong> A* finds all variables in the current
    workspace that start with A.
 
    <strong>who</strong> -REGEXP PAT1 PAT2 can be used to display all variables matching the
    specified patterns using regular expressions. For more information on
    using regular expressions, type "doc regexp" at the command prompt.
 
    Use the functional form of <strong>who</strong>, such as <strong>who</strong>('-file',FILE,V1,V2),
    when the filename or variable names are stored as a character vector or 
    string scalar. 
 
    S = <strong>who</strong>(...) returns a cell array containing the names of the variables
    in the workspace or file. You must use the functional form of <strong>who</strong> when
    there is an output argument.
 
    Examples for pattern matching:
        who a*                      % Show variable names starting with "a"
        who -regexp ^b\d{3}$        % Show variable names starting with "b"
                                    %   and followed by 3 digits
        who -file fname -regexp \d  % Show variable names containing any
                                    %   digits that exist in MAT-file fname
 
    See also <a href="matlab:help whos -displayBanner">whos</a>, <a href="matlab:help clear -displayBanner">clear</a>, <a href="matlab:help clearvars -displayBanner">clearvars</a>, <a href="matlab:help save -displayBanner">save</a>, <a href="matlab:help load -displayBanner">load</a>.

    <a href="matlab:doc who">Documentation for who</a>

help sqrt
 <strong>sqrt</strong>   Square root.
    <strong>sqrt</strong>(X) is the square root of the elements of X. Complex 
    results are produced if X is not positive.
 
    See also <a href="matlab:help sqrtm -displayBanner">sqrtm</a>, <a href="matlab:help realsqrt -displayBanner">realsqrt</a>, <a href="matlab:help hypot -displayBanner">hypot</a>.

    <a href="matlab:doc sqrt">Documentation for sqrt</a>

sqrt(4)

ans =

     2

lookfor sqrt
<a href="matlab:help realsqrt">realsqrt</a>                       - Real square root.
<a href="matlab:help sqrt">sqrt</a>                           - Square root.
<a href="matlab:help sqrtm">sqrtm</a>                          - Matrix square root.
<a href="matlab:help sqrtm_tbt">sqrtm_tbt</a>                      - Square root of 2x2 matrix from block diagonal of Schur form.
<a href="matlab:help sqrtm_tri">sqrtm_tri</a>                      - Square root of quasi-upper triangular matrix.
x=5

x =

     5

cos x
{Check for incorrect argument data type or missing argument in
call to function 'cos'.
} 
cos(x)

ans =

   0.283662185463226

sin(x)

ans =

  -0.958924274663138

tan(x)

ans =

  -3.380515006246586

tan(x)

ans =

  -3.380515006246586

exp(0)

ans =

     1

sqrt(3)

ans =

   1.732050807568877

format short
sqrt(3)

ans =

    1.7321

log(10)

ans =

    2.3026

sign(10)

ans =

     1

sig(20)
{Unrecognized function or variable 'sig'.
} 
sig(20)
{Unrecognized function or variable 'sig'.
} 
sign(20)

ans =

     1

sign(100)

ans =

     1

pi

ans =

    3.1416

conj(3-i4)
{Unrecognized function or variable 'i4'.
} 
Inf

ans =

   Inf

3-4i

ans =

   3.0000 - 4.0000i

conj(3-4i)

ans =

   3.0000 + 4.0000i

x=[1,2,3]

x =

     1     2     3

y=[4,5,6]

y =

     4     5     6

plot(x,y)
x=0:pi/100:2*pi

x =

  Columns 1 through 6

         0    0.0314    0.0628    0.0942    0.1257    0.1571

  Columns 7 through 12

    0.1885    0.2199    0.2513    0.2827    0.3142    0.3456

  Columns 13 through 18

    0.3770    0.4084    0.4398    0.4712    0.5027    0.5341

  Columns 19 through 24

    0.5655    0.5969    0.6283    0.6597    0.6912    0.7226

  Columns 25 through 30

    0.7540    0.7854    0.8168    0.8482    0.8796    0.9111

  Columns 31 through 36

    0.9425    0.9739    1.0053    1.0367    1.0681    1.0996

  Columns 37 through 42

    1.1310    1.1624    1.1938    1.2252    1.2566    1.2881

  Columns 43 through 48

    1.3195    1.3509    1.3823    1.4137    1.4451    1.4765

  Columns 49 through 54

    1.5080    1.5394    1.5708    1.6022    1.6336    1.6650

  Columns 55 through 60

    1.6965    1.7279    1.7593    1.7907    1.8221    1.8535

  Columns 61 through 66

    1.8850    1.9164    1.9478    1.9792    2.0106    2.0420

  Columns 67 through 72

    2.0735    2.1049    2.1363    2.1677    2.1991    2.2305

  Columns 73 through 78

    2.2619    2.2934    2.3248    2.3562    2.3876    2.4190

  Columns 79 through 84

    2.4504    2.4819    2.5133    2.5447    2.5761    2.6075

  Columns 85 through 90

    2.6389    2.6704    2.7018    2.7332    2.7646    2.7960

  Columns 91 through 96

    2.8274    2.8588    2.8903    2.9217    2.9531    2.9845

  Columns 97 through 102

    3.0159    3.0473    3.0788    3.1102    3.1416    3.1730

  Columns 103 through 108

    3.2044    3.2358    3.2673    3.2987    3.3301    3.3615

  Columns 109 through 114

    3.3929    3.4243    3.4558    3.4872    3.5186    3.5500

  Columns 115 through 120

    3.5814    3.6128    3.6442    3.6757    3.7071    3.7385

  Columns 121 through 126

    3.7699    3.8013    3.8327    3.8642    3.8956    3.9270

  Columns 127 through 132

    3.9584    3.9898    4.0212    4.0527    4.0841    4.1155

  Columns 133 through 138

    4.1469    4.1783    4.2097    4.2412    4.2726    4.3040

  Columns 139 through 144

    4.3354    4.3668    4.3982    4.4296    4.4611    4.4925

  Columns 145 through 150

    4.5239    4.5553    4.5867    4.6181    4.6496    4.6810

  Columns 151 through 156

    4.7124    4.7438    4.7752    4.8066    4.8381    4.8695

  Columns 157 through 162

    4.9009    4.9323    4.9637    4.9951    5.0265    5.0580

  Columns 163 through 168

    5.0894    5.1208    5.1522    5.1836    5.2150    5.2465

  Columns 169 through 174

    5.2779    5.3093    5.3407    5.3721    5.4035    5.4350

  Columns 175 through 180

    5.4664    5.4978    5.5292    5.5606    5.5920    5.6235

  Columns 181 through 186

    5.6549    5.6863    5.7177    5.7491    5.7805    5.8119

  Columns 187 through 192

    5.8434    5.8748    5.9062    5.9376    5.9690    6.0004

  Columns 193 through 198

    6.0319    6.0633    6.0947    6.1261    6.1575    6.1889

  Columns 199 through 201

    6.2204    6.2518    6.2832

plot(x,y)
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot')" style="font-weight:bold">plot</a>
Vectors must be the same length.
} 
y=sin(x)

y =

  Columns 1 through 6

         0    0.0314    0.0628    0.0941    0.1253    0.1564

  Columns 7 through 12

    0.1874    0.2181    0.2487    0.2790    0.3090    0.3387

  Columns 13 through 18

    0.3681    0.3971    0.4258    0.4540    0.4818    0.5090

  Columns 19 through 24

    0.5358    0.5621    0.5878    0.6129    0.6374    0.6613

  Columns 25 through 30

    0.6845    0.7071    0.7290    0.7501    0.7705    0.7902

  Columns 31 through 36

    0.8090    0.8271    0.8443    0.8607    0.8763    0.8910

  Columns 37 through 42

    0.9048    0.9178    0.9298    0.9409    0.9511    0.9603

  Columns 43 through 48

    0.9686    0.9759    0.9823    0.9877    0.9921    0.9956

  Columns 49 through 54

    0.9980    0.9995    1.0000    0.9995    0.9980    0.9956

  Columns 55 through 60

    0.9921    0.9877    0.9823    0.9759    0.9686    0.9603

  Columns 61 through 66

    0.9511    0.9409    0.9298    0.9178    0.9048    0.8910

  Columns 67 through 72

    0.8763    0.8607    0.8443    0.8271    0.8090    0.7902

  Columns 73 through 78

    0.7705    0.7501    0.7290    0.7071    0.6845    0.6613

  Columns 79 through 84

    0.6374    0.6129    0.5878    0.5621    0.5358    0.5090

  Columns 85 through 90

    0.4818    0.4540    0.4258    0.3971    0.3681    0.3387

  Columns 91 through 96

    0.3090    0.2790    0.2487    0.2181    0.1874    0.1564

  Columns 97 through 102

    0.1253    0.0941    0.0628    0.0314    0.0000   -0.0314

  Columns 103 through 108

   -0.0628   -0.0941   -0.1253   -0.1564   -0.1874   -0.2181

  Columns 109 through 114

   -0.2487   -0.2790   -0.3090   -0.3387   -0.3681   -0.3971

  Columns 115 through 120

   -0.4258   -0.4540   -0.4818   -0.5090   -0.5358   -0.5621

  Columns 121 through 126

   -0.5878   -0.6129   -0.6374   -0.6613   -0.6845   -0.7071

  Columns 127 through 132

   -0.7290   -0.7501   -0.7705   -0.7902   -0.8090   -0.8271

  Columns 133 through 138

   -0.8443   -0.8607   -0.8763   -0.8910   -0.9048   -0.9178

  Columns 139 through 144

   -0.9298   -0.9409   -0.9511   -0.9603   -0.9686   -0.9759

  Columns 145 through 150

   -0.9823   -0.9877   -0.9921   -0.9956   -0.9980   -0.9995

  Columns 151 through 156

   -1.0000   -0.9995   -0.9980   -0.9956   -0.9921   -0.9877

  Columns 157 through 162

   -0.9823   -0.9759   -0.9686   -0.9603   -0.9511   -0.9409

  Columns 163 through 168

   -0.9298   -0.9178   -0.9048   -0.8910   -0.8763   -0.8607

  Columns 169 through 174

   -0.8443   -0.8271   -0.8090   -0.7902   -0.7705   -0.7501

  Columns 175 through 180

   -0.7290   -0.7071   -0.6845   -0.6613   -0.6374   -0.6129

  Columns 181 through 186

   -0.5878   -0.5621   -0.5358   -0.5090   -0.4818   -0.4540

  Columns 187 through 192

   -0.4258   -0.3971   -0.3681   -0.3387   -0.3090   -0.2790

  Columns 193 through 198

   -0.2487   -0.2181   -0.1874   -0.1564   -0.1253   -0.0941

  Columns 199 through 201

   -0.0628   -0.0314   -0.0000

